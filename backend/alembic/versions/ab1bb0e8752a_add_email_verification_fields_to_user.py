"""Add email verification fields to User

Revision ID: 9befe6920f48
Revises: f953d9502fa1
Create Date: 2023-04-20 12:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9befe6920f48'
down_revision: Union[str, None] = 'f953d9502fa1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('doctor_profiles_ibfk_1', 'doctor_profiles', type_='foreignkey')
    op.create_foreign_key(None, 'doctor_profiles', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('patient_profiles_ibfk_1', 'patient_profiles', type_='foreignkey')
    op.create_foreign_key(None, 'patient_profiles', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('users', sa.Column('is_email_verified', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('email_verification_token', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('verification_token_expiry', sa.DateTime(), nullable=True))
    op.create_unique_constraint(None, 'users', ['email_verification_token'])
    # ### end Alembic commands ###
    
    # Установим is_email_verified в True для всех существующих пользователей
    op.execute("UPDATE users SET is_email_verified = TRUE")
    
    # Изменим nullable на False
    op.alter_column('users', 'is_email_verified', nullable=False)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'verification_token_expiry')
    op.drop_column('users', 'email_verification_token')
    op.drop_column('users', 'is_email_verified')
    op.drop_constraint(None, 'patient_profiles', type_='foreignkey')
    op.create_foreign_key('patient_profiles_ibfk_1', 'patient_profiles', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'doctor_profiles', type_='foreignkey')
    op.create_foreign_key('doctor_profiles_ibfk_1', 'doctor_profiles', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###
